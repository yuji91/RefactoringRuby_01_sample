# 6.17 動的メソッド定義 : クラスアノテーションによるインスタンスメソッドの定義
# def_eachメソッドは、複数の類似メソッドを定義する素晴らしいツールだが、
# 同種のメソッドが表す概念をコード内でうまく使えば、コード自体がもっと多くのことを表現できるようになる。
# たとえば、先ほどのメソッド定義は、どれもがクラスの状態を設定していた。
# そこで、def_eachを使うのではなく、「クラスアノテーションの導入」を使って状態設定メソッドを生成しよう。
# statesクラスアノテーションを定義すれば、より表現力の高いコードが作れる。
def failure
  self.state = :failure
end

def error
  self.state = :error
end

def success
  self.state = :success
end
# 以上のコードは完璧に正しく動作するが、11行ものソースコードを消費するにしては、似ている。
